version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1
  slack: circleci/slack@4.10.1

jobs:
  lint:
    working_directory: ~/symeo-webapp
    docker:
      - image: cimg/node:16.16.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "~/symeo-webapp/yarn.lock" }}
      - run:
          name: Install front dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "~/symeo-webapp/yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Lint
          command: yarn lint
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1
  deploy:
    working_directory: ~/symeo-webapp
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - restore_cache:
          key: dependency-cache-{{ checksum "~/symeo-webapp/yarn.lock" }}
      - run:
          name: Install nodejs
          command: |
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
            sudo apt install nodejs
      - run:
          name: Install front dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "~/symeo-webapp/yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Deploy to S3
          command: cd .aws && ./deploy.sh --region ${AWS_REGION} --env ${ENVIRONMENT}
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1
  build-aws-infrastructure:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Build infrastructure
          command: |
            cd .aws && ./build_infrastructure.sh \
              --region ${AWS_REGION} \
              --env ${ENVIRONMENT} \
              --prefix-url ${PREFIX_URL_FRONTEND} \
              --domain ${DOMAIN} \
              --acm-arn ${ACM_ARN}
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

workflows:
  webapp:
    jobs:
      - lint:
          context:
            - slack-notifications
            - staging
      - deploy:
          requires:
            - lint
          context:
            - slack-notifications
            - staging
          filters:
            branches:
              only:
                - staging
      - deploy:
          requires:
            - lint
          context:
            - slack-notifications
            - demo
          filters:
            branches:
              only:
                - demo
      - deploy:
          requires:
            - lint
          context:
            - slack-notifications
            - production
          filters:
            branches:
              only:
                - main
  build-infrastructure:
    jobs:
      - build-aws-infrastructure:
          context:
            - staging
            - slack-notifications
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^infrastructure-staging-.+$/
      - build-aws-infrastructure:
          context:
            - demo
            - slack-notifications
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^infrastructure-demo-.+$/
      - build-aws-infrastructure:
          context:
            - production
            - slack-notifications
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^infrastructure-production-.+$/
